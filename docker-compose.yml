version: '3.3'

services:
  nginx:
    restart: always
    build: ./server-nginx
    image: nginx
    container_name: nginx 
    # links:
    #   - gateway    
  mongodb:
    image: mongo:latest
    container_name: "mongodb"
    environment:
      - MONGO_DATA_DIR=/_data/db
      - MONGO_LOG_DIR=/dev/null
    volumes:
      - ./_data/db:/_data/db
    command: mongod --smallfiles --logpath=/dev/null
  redis:
    restart: always
    image: "redis:alpine"
    ports:
        - 6379
    container_name: redis
  gateway:
    restart: always
    image: mhart/alpine-node:8.9.4
    container_name: gateway
    build:
      context: ./
      dockerfile: ./server-gateway/Dockerfile
    ports:
      - 3100
    volumes:
      - ./server-gateway:/usr/src/app/server-gateway
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
  client:
    # working_dir: /usr/src/app/client/
    image: client
    container_name: client
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    volumes:
      - ./client/src:/usr/src/app/client/src
      - ./client/dist:/usr/src/app/client/dist
      # - ./client/src:/usr/src/app/client/src
      # - ./client/www:/usr/src/app/client/www
#      - ./client:/usr/src/app/client
      - ./shared:/usr/src/app/shared
      - /usr/src/app/client/node_modules
      # - /usr/src/app/client/node_modules
  client-app:
    image: client-app
    container_name: client-app
    build:
      context: ./
      dockerfile: /client-app/Dockerfile
    volumes:
      - ./client-app:/usr/src/app/client-app
      - ./client/dist/www:/usr/src/app/client-app/www
  cache:
    restart: always
    image: cache
    container_name: "cache"
    build:
      context: ./
      dockerfile: server-cache/Dockerfile
    ports:
      - 3001
    volumes:
      - ./server-cache:/usr/src/app/server-cache
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
      - mongodb
  user:
    restart: always
    image: user
    container_name: user
    build:
      context: ./
      dockerfile: server-user/Dockerfile
    ports:
      - 3008
    volumes:
      - ./server-user:/usr/src/app/server-user
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
      - mongodb
  notify:
    restart: always
    image: notify
    container_name: notify
    build:
      context: ./
      dockerfile: server-notify/Dockerfile
    ports:
      - 3010
    volumes:
      - ./server-notify:/usr/src/app/server-notify
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
      - mongodb
  comment:
    restart: always
    image: comment
    container_name: comment
    build:
      context: ./
      dockerfile: server-comment/Dockerfile
    ports:
      - 3009
    volumes:
      - ./server-comment:/usr/src/app/server-comment
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
      - mongodb
  event:
    restart: always
    image: event
    container_name: event
    build:
      context: ./
      dockerfile: server-event/Dockerfile
    ports:
      - 3011
    volumes:
      - ./server-event:/usr/src/app/server-event
      - ./tradejs.config.js:/usr/src/app/tradejs.config.js
      - ./tradejs.config.custom.js:/usr/src/app/tradejs.config.custom.js
    links:
      - redis
      - mongodb
volumes:
  node_modules: