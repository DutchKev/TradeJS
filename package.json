{
  "releaseName": "coinpush",
  "name": "coinpush",
  "version": "0.0.1-alpha-4",
  "email": "kewin@frontend-freelance.com",
  "author": "Kewin Brandsma",
  "main": "index.js",
  "private": false,
  "license": "CC-BY-NC-ND-4.0",
  "description": "Javascript Trading Client and Server",
  "repository": {
    "type": "git",
    "url": "https://github.com/DutchKevv/CoinPush.git"
  },
  "keywords": [
    "CoinPush",
    "Stock",
    "Forex",
    "Trade",
    "Trading",
    "Node",
    "Trading",
    "NodeJS"
  ],
  "scripts": {
    "postinstall": "npm run npm-install",
    "build": "docker-compose build --parallel",
    "build-client": "docker-compose build --force-rm cp-client",
    "build-client-app": "docker-compose build client-app",
    "build-server": "docker-compose build --parallel mongodb redis gateway notify user event cache comment",
    "build-prod": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --parallel",
    "build-prod-client": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --parallel cp-client",
    "build-prod-server": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml build --parallel --no-cache redis gateway notify user event cache comment mongodb",
    "start": "echo ' ------------ RUN 'npm run start-client' OR 'npm run start-server' -------------- '",
    "server": "docker-compose up -d redis gateway notify cache event comment user mongodb && npm run d-log-server",
    "client": "docker-compose up cp-client",
    "mongo": "docker-compose up -d mongodb",
    "restart-server": "npm run kill-server && npm run start-server",
    "prod-client": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up cp-client",
    "prod-server": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d redis gateway notify user event cache comment mongodb",
    "prod-mongo": "docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d mongodb",
    "kill-server": "docker-compose kill redis gateway notify user event cache comment mongodb",
    "d-rm-all": "docker-compose rm -f",
    "d-rm-server": "npm run d-kill-server && docker-compose rm gateway notify user event cache comment",
    "d-rmi-none": "docker rmi $(docker images --filter 'dangling=true' -q --no-trunc)",
    "d-rmi-all": "docker rmi -f $(docker images -q)",
    "d-rmi-dangling": "docker rmi $(sudo docker images --filter \"dangling=true\" -q --no-trunc)",
    "d-mongo-shell": "docker exec -it mongodb mongo",
    "d-kill": "docker-compose kill",
    "d-up": "docker-compose up",
    "d-prune": "docker system prune -f",
    "d-log": "docker-compose logs --tail=30 -f",
    "d-log-server": "docker-compose logs --tail=10 -f notify user event cache comment gateway",
    "d-log-mongo": "docker-compose logs --tail=20 -f mongodb",
    "d-login": "docker login registry.coinpush.app -u kewin -p Bettie123!",
    "d-pull-service": "npm run d-login && docker pull registry.coinpush.app/$API_NAME && docker-compose kill $API_NAME && docker-compose rm $API_NAME || true && docker-compose -f ./docker-compose.yml -f ./docker-compose.prod.yml up -d $API_NAME",
    "clean-client": "cd ./scripts/npm && sh ./clean-modules.sh",
    "clean-app": "cd ./scripts/npm && sh ./clean-modules.sh",
    "clean-server": "cd ./scripts/npm && sh ./clean-modules.sh",
    "clean-db": "",
    "clean-candles": "docker exec -it mongodb bash -c 'mongo < myFile.js'",
    "npm-clean": "cd ./scripts/npm && node --experimental-modules clean-modules.mjs",
    "npm-update": "cd ./scripts/npm && sh ./update-modules.sh",
    "npm-install": "cd ./scripts/npm && node --experimental-modules install-modules.mjs",
    "inc-build-number": "node ./scripts/inc-build-number.js",
    "prepare-dev": "cd ./scripts && node --experimental-modules prepare_dev.mjs",
    "kube-start": "minikube start --vm-driver hyperv --hyperv-virtual-switch \"coinpush-switch\"" 
  },
  "dependencies": {}
}
